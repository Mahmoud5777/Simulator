stages:
  - test

cppcheck_analysis:
  stage: test
  image: ubuntu:latest 
  before_script:
    - apt-get update -qq && apt-get install -y -qq cppcheck
  script:
    - pwd    
    - ls -R  
    - cppcheck --enable=all --std=c++17 --xml --output-file=cppcheck_report.xml .

  artifacts:
    when: always
    paths:
      - cppcheck_report.xml
    reports:
      codequality: cppcheck_report.xml

clang_tidy_analysis:
  stage: test
  image: ubuntu:latest
  before_script:
    - apt-get update -qq && apt-get install -y -qq clang-tidy python3
  script:
    # Solution alternative pour générer compile_commands.json sans CMake
    - pip3 install compiledb
    - compiledb make -B  # Ou utilisez votre commande de build réelle
    
    # Vérification que le fichier existe
    - cat compile_commands.json || echo "Fichier compile_commands.json non généré"
    
    # Exécution de clang-tidy sur les fichiers C++
    - find . -name '*.cpp' | xargs -I {} clang-tidy {} -p . --checks='*,-modernize-use-trailing-return-type'
  artifacts:
    when: on_failure
    paths:
      - clang-tidy.log